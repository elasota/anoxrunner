Shadowfile format:

Shadowfiles are a copy-on-write transacted file archive format.

ShadowFileLocator
{
	uint32_t extentsSectorListSector
	uint32_t extentsTableSize
	uint32_t fsRootExtentsStart
}

ShadowFileHeader
{
	char identifier[4];	// RSFS
	uint16_t version;	// 1
	uint8_t sectorSizeBits;
	ShadowFileLocator locators[2];
	uint8_t activeLocator;	// 1 or 2, 0 = incompletely-initialized
}


Fields in the locator:
- extentsSectorListSector: The sector containing the list of sectors of the extents table
- extentsTableSize: The number of extents table entries (used and unused)
- numFileTableEntries: The number of file table entries

Extents table format:
ExtentsEntry
{
	uint32_t sector (0 if unused)
	uint32_t nextExtents (loops back to start)
}

The first extents table entry (0) is the file table.

The first file table entry is the root directory.

- fileTableExtentsStart: The base extents of the file table
- numFileTableEntries: The number of file records

The root directory is always file table entry 0


FileTableEntry
{
	uint8_t nameLength
	uint8_t name[255]
	uint32_t flags
	uint32_t extentsStart
	uint64_t size

	byte[sector size - 272]	initialData
}

- name: The name of the file, must be null-terminated
- flags: Bitfield, 1 = is directory
- extentsStart: First entry of the extents table, unused if size is (sector size - 272) or less
- size: Data size
- initialData: First bytes of file data

In the case of directories, the contents are a min-max heap of file entries.
The high-order bit of each entry is a flag indicating whether the lower (0) or
higher (1) index in the list contains the larger value, for ordered traversal.
